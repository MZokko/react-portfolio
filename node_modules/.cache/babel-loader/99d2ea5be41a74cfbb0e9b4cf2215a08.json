{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zokko/Desktop/react-portfolio/src/Components/MyGitFeed/MyGitFeed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Grid } from '@material-ui/core';\nimport axios from 'axios';\n\nconst MyGitFeed = () => {\n  _s();\n\n  //loading fetch data from git api\n  // const  githubApiFetch = async()=>{\n  //   const url= 'https://api.github.com/repos/{MZokko}/{react-portfolio}'\n  //   // const response =  await axios.get().then().catch;\n  //   const result = await response.json();\n  //   console.log(result)\n  // }\n  useEffect(() => {\n    try {// githubApiFetch();\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: \"section_title mb_30\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"section_title_text\",\n          children: \"Github activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      className: \"gridGiTCard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MyGitFeed, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MyGitFeed;\nexport default MyGitFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyGitFeed\");","map":{"version":3,"sources":["/Users/zokko/Desktop/react-portfolio/src/Components/MyGitFeed/MyGitFeed.js"],"names":["React","useEffect","useState","Card","Grid","axios","MyGitFeed","error","console","log","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CACF;AACD,KAFD,CAEE,OAAOM,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AAEF,GAPQ,EAON,EAPM,CAAT;AAUA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,SAAS,EAAC,qBAArB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,SAAS,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAWD,CA/BD;;GAAMJ,S;;KAAAA,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React,  { useEffect, useState } from 'react';\nimport { Card, Grid } from '@material-ui/core';\nimport axios from 'axios'\n\nconst MyGitFeed = () => {\n\n  //loading fetch data from git api\n  // const  githubApiFetch = async()=>{\n  //   const url= 'https://api.github.com/repos/{MZokko}/{react-portfolio}'\n  //   // const response =  await axios.get().then().catch;\n  //   const result = await response.json();\n  //   console.log(result)\n  // }\n\n  useEffect(() => {\n    try {\n      // githubApiFetch();\n    } catch (error) {\n      console.log(error.message)\n    }\n    \n  }, [])\n\n\n  return (\n    <>\n      <Grid>\n        <Grid item className='section_title mb_30'>\n          <span></span>\n          <h6 className='section_title_text'>Github activity</h6>\n        </Grid>\n      </Grid>\n      <Grid container spacing={3} className='gridGiTCard'></Grid>\n    </>\n  );\n};\n\nexport default MyGitFeed;\n"]},"metadata":{},"sourceType":"module"}